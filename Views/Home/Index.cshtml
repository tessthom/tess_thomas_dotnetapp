@{
    ViewData["Title"] = "Home";
}

@section Header {
    <div class="container-lg">
        <h1 class="visually-hidden">Home</h1>
    </div>
}

<div id="myCarousel" class="carousel slide container-lg px-0 mb-5" data-bs-ride="true">
    <div class="carousel-indicators">
    <button type="button" data-bs-target="#myCarousel" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
    <button type="button" data-bs-target="#myCarousel" data-bs-slide-to="1" aria-label="Slide 2"></button>
    <button type="button" data-bs-target="#myCarousel" data-bs-slide-to="2" aria-label="Slide 3"></button>
  </div>
  <div class="carousel-inner">
    <div class="carousel-item active">
        <div class="aspect-ratio aspect-4x3">
            <img src="/images/scaffolding-1000.jpg" class="d-block w-100 object-fit-cover" alt="">
        </div>
      <div class="carousel-caption d-flex flex-column justify-content-center h-100" style="top: 0">
            <h2 class="display-4 fw-bold mb-4">Learn how to set up a .NET app</h2>
            <a class="btn btn-primary ms-auto me-auto mt-2 py-2 px-4" href="#" role="button">Tutorials</a>
      </div>
    </div>
    <div class="carousel-item">
        <div class="aspect-ratio aspect-4x3">
            <img src="/images/laptop-1000.jpg" class="d-block w-100 object-fit-cover" alt="">
        </div>
        <div class="carousel-caption d-flex flex-column justify-content-center h-100" style="top: 0"">
            <h2 class="display-4 fw-bold mb-4">Give feedback about the class</h2>
            <a class="btn btn-primary ms-auto me-auto mt-2 py-2 px-4" href="#" role="button">Contact</a>
        </div>
    </div>
    <div class="carousel-item">
        <div class="aspect-ratio aspect-4x3">
            <img src="/images/construction-1000.jpg" class="d-block w-100 object-fit-cover" alt="">
        </div>
        <div class="carousel-caption d-flex flex-column justify-content-center h-100" style="top: 0"">
            <h2 class="display-4 fw-bold mb-4">Browse common questions about the construction of Core MVC apps</h2>
            <a class="btn btn-primary ms-auto me-auto mt-2 py-2 px-4" href="#" role="button">FAQs</a>
        </div>
    </div>
  </div>
  <button class="carousel-control-prev" type="button" data-bs-target="#myCarousel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
  </button>
    <button class="carousel-control-next" type="button" data-bs-target="#myCarousel" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>

<div class="container-lg py-5">
    @* cols of text below carousel *@
    <div class="row home">
        <div class="col-12 mb-5 px-4 home__col--one">
            <img src="/images/roadmap-cropped-on-right.jpg" alt="FIRST COL IMAGE HERE" class="img-fluid w-50 float-sm-end pill pill--round-left">
            <h3 class="fw-medium fs-2 mt-1 mb-4 pill__copy--h3">Configuring Middleware for an HTTP Request Pipeline</h3>
            <p class="pill__copy--p">
                Each middleware component performs a task in the pipeline, executed in the order they're added. The first component receives the request and the last sends the response.
            </p>
            <p class="pill__copy--p">
                By default the MVC template checks the environment and adds appropriate components first, then the routing middleware, which maps URLs to controller actions. The <code>MapControllerRoute()</code> method sets the app's default action to call the Home controller's <code>Index()</code> action, for example. Then endpoint middleware, which runs the action to generate a response.
            </p>
        </div>
        <div class="col-12 mb-5 px-4 home__col--two">
            <img src="/images/typing-400-square.jpg" alt="SECOND COL IMAGE HERE" class="img-fluid w-50 float-sm-start pill pill--round-right">
            <h3 class="fw-medium fs-2 text-end text-lg-start mt-1 mb-4 pill__copy--h3">URL Best Practices</h3>
            <p class="pill__copy--p">
                URLs specify the interface for an app. They should be easy to read, easy to type, and easy to remember. Well designed URLs are good SEO and more likely to be bookmarked by users. Keep them concise while still being descriptive, use keywords to describe page content, and try to create an intuitive hierarchy. 
            </p>
            <p class="pill__copy--p">
                An ideal URL is all descriptive strings, but sometimes a numeric ID is necessary for database interaction. If this is the case, be sure to pair the ID with a descriptive string. For example, <code>/products/1</code> is better than <code>/products?id=1</code>.
            </p>
        </div>
        <div class="col-12 px-4 home__col--three">
            <img src="/images/wires-400-square.jpg" alt="SECOND COL IMAGE HERE" class="img-fluid w-50 float-sm-end pill pill--round-left">
            <h3 class="fw-medium fs-2 mt-1 mb-4 pill__copy--h3">Binding Model Properties to HTML Elements</h3>
            <p class="pill__copy--p">
                The <code>asp-for</code> tag helper is typically used with forms to bind model properties to HTML elements in Razor views. It specifies the model property for the HTML element. The tag helper generates the <code>name</code> and <code>id</code> attributes of the HTML element. The <code>name</code> attribute is used to bind the element to a model property. The <code>id</code> attribute is used to associate the element with a <code>&lt;label&gt;</code> element. In the model, the property must have a public setter and getter in order to be bound.
            </p>
        </div>
    </div>
</div>
